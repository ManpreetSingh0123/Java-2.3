import java.util.*;
import java.util.stream.*;
import java.util.Map.Entry;

class Product {
    String name;
    double price;
    String category;

    Product(String name, double price, String category) {
        this.name = name;
        this.price = price;
        this.category = category;
    }

    public String toString() {
        return name + " $" + price;
    }
}

public class Main {
    public static void main(String[] args) {
        List<Product> products = Arrays.asList(
            new Product("Laptop", 900, "Electronics"),
            new Product("Phone", 700, "Electronics"),
            new Product("Shirt", 50, "Clothing"),
            new Product("Jeans", 80, "Clothing"),
            new Product("Blender", 120, "Home Appliances")
        );

        Map<String, List<Product>> groupedByCategory = products.stream()
            .collect(Collectors.groupingBy(p -> p.category));
        System.out.println("Grouped by category: " + groupedByCategory);

        Map<String, Optional<Product>> mostExpensive = products.stream()
            .collect(Collectors.groupingBy(
                p -> p.category,
                Collectors.maxBy(Comparator.comparingDouble(p -> p.price))
            ));
        System.out.println("Most expensive product per category: " + mostExpensive);

        double averagePrice = products.stream()
            .collect(Collectors.averagingDouble(p -> p.price));
        System.out.println("Average price of all products: " + averagePrice);
    }
}
